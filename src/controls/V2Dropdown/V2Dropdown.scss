.V2Dropdown {
  $chevron-size: 6px;
  $self: &;

  @extend %v2Control;

  // use floats because of ugly google-chrome subpixel rendering
  // 42.01 instead of 42% looks nicer in chrome.
  // https://stackoverflow.com/questions/51850356/chrome-linear-gradient-bugs-when-dealing-with-subpixels
  @mixin chevronDown ($color) {
    background-image:
      linear-gradient(45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%),
      linear-gradient(-45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%);
  }

  @mixin chevronUp ($color) {
    background-image:
      linear-gradient(-45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%),
      linear-gradient(45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%);
  }

  box-sizing: border-box;
  appearance: none;
  cursor: pointer;
  background-position:
    calc(100% - #{18px+$chevron-size}) 4px,
    calc(100% - 18px) 4px,
    calc(100% - 2.5em) 0;
  background-size:
    $chevron-size $chevron-size,
    $chevron-size $chevron-size,
    1px 0;
  background-repeat: no-repeat;
  height: 31px; // = lineheight + padding-bottom + border-bottom

  &:focus,
  .Theme-dark &:focus {
    @include chevronDown(var-get('colorPrimary'));
  }

  .has-error &:focus {
    @include chevronDown(var-get('colorError'));
  }


  &-content {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    padding: 16px;
    width: 100%;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    background-position:
      calc(100% - #{17px+$chevron-size}) 20px,
      calc(100% - 18px) 20px,
      calc(100% - 2.5em) 0;
    background-size:
      $chevron-size $chevron-size,
      $chevron-size $chevron-size,
      1px 0;
    background-repeat: no-repeat;
  }

  &-content .V2Label-text {
    position: initial;
    margin-bottom: 24px;
  }

  &.is-open &-content {
    display: block;
    box-shadow: 0 8px 16px 0 rgba(13, 18, 44, 0.2);
  }

  //
  // Light theme colors
  //

  $theme-light-colors: map-get($v2-control-colors, light);

  @include chevronDown(map-get($theme-light-colors, border-default));

  .has-value & {
    @include chevronDown(map-get($theme-light-colors, input-default));
  }

  &:disabled {
    @include chevronDown(map-get($theme-light-colors, border-disabled));
  }

  & .V2Label-text {
    color: map-get($theme-light-colors, border-default);
  }

  &-content {
    @include chevronUp(map-get($theme-light-colors, border-default));

    background-color: map-get($theme-light-colors, background-default);
  }

  //
  // Dark theme colors
  //

  $theme-dark-colors: map-get($v2-control-colors, dark);

  .Theme-dark & .V2Label-text {
    color: map-get($theme-light-colors, border-default);
  }

  .Theme-dark & {
    @include chevronDown(map-get($theme-dark-colors, border-default));
  }

  .Theme-dark .has-value & {
    @include chevronDown(map-get($theme-dark-colors, input-default));
  }

  .Theme-dark &:disabled {
    @include chevronDown(map-get($theme-dark-colors, border-disabled));
  }

  .Theme-dark &-content {
    @include chevronUp(map-get($theme-dark-colors, border-default));

    background-color: map-get($theme-dark-colors, background-default);
  }
}
