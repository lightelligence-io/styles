$chevron-size: 6px;

.V2Dropdown {
  $dropdown-content-height: 220px;

  $self: &;

  @extend %v2Control;

  // use floats because of ugly google-chrome subpixel rendering
  // 42.01 instead of 42% looks nicer in chrome.
  // https://stackoverflow.com/questions/51850356/chrome-linear-gradient-bugs-when-dealing-with-subpixels
  @mixin chevronDown ($color) {
    background-image:
      linear-gradient(45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%),
      linear-gradient(-45deg, transparent 42.01%, $color 42.01%, $color 60.01%, transparent 60.01%);
  }

  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  min-height: $v2-control-line-height + $v2-control-margin-top + $v2-control-padding-top + $v2-control-padding-bottom + $v2-control-border-bottom;
  margin: 0;
  padding: 0;
  transition: all 400ms;


  &:before {
    background-position: 0 0, $chevron-size 0;
    background-size:
      $chevron-size $chevron-size,
      $chevron-size $chevron-size,
      1px 0;
    background-repeat: no-repeat;
    content: "";
    position: absolute;
    height: $chevron-size;
    width: #{2*$chevron-size};
    top: #{4px + $v2-control-margin-top};
    left: calc(100% - #{2px + $v2-control-padding-horizontal + 2 * $chevron-size});
    transition: all 400ms;
  }

  &-content {
    max-height: 0;
    // max-height: $dropdown-content-height;
    overflow: hidden;
    transition: all 400ms;
    margin-top: $v2-control-line-height + $v2-control-margin-top;
  }

  //
  // Light theme colors
  //

  $theme-light-colors: map-get($v2-control-colors, light);

  &:before {
    @include chevronDown(map-get($theme-light-colors, border-default));
  }

  .has-value &:before {
    @include chevronDown(map-get($theme-light-colors, input-default));
  }

  &:disabled &:before {
    @include chevronDown(map-get($theme-light-colors, border-disabled));
  }

  & .V2Label-text {
    color: map-get($theme-light-colors, border-default);
  }

  //
  // Dark theme colors
  //

  $theme-dark-colors: map-get($v2-control-colors, dark);

  .Theme-dark & .V2Label-text {
    color: map-get($theme-light-colors, border-default);
  }

  .Theme-dark &:before {
    @include chevronDown(map-get($theme-dark-colors, border-default));
  }

  .Theme-dark .has-value &:before {
    @include chevronDown(map-get($theme-dark-colors, input-default));
  }

  .Theme-dark &:disabled &:before {
    @include chevronDown(map-get($theme-dark-colors, border-disabled));
  }



  @at-root {
    *[data-toggle='dropdown'] {
      display: none;
    }

    #{$self}.is-open,
    *[data-toggle='dropdown']:checked + label > #{$self} {
      border-radius: 4px;
      overflow: hidden;
      border: none;
      box-shadow: 0 8px 16px 0 rgba(13, 18, 44, 0.2);
      background-color: get-color('light');

      #{$self}-content {
        display: block;
        max-height: $dropdown-content-height;
        overflow: scroll;
      }

      &:before {
        transform: rotate(180deg);
      }

      .Theme-dark & {
        background-color: get-color('dark');
      }
    }
  }
}
