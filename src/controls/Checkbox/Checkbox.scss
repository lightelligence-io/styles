/**
  * All colors
  *
  * Note this component can't be "brandable", since we use svgs as the
  * background for the checkbox. In this case we are forced to use
  * `get-color-value` since we want to have the final, color and not a
  * CSS variable reference
  */
$checkbox-colors: (
  light: (
    default: get-color('gray800'),
    checked: get-color('primary'),
    disabled: get-color('gray500'),
    background: (
      default: get-color-value('gray800'),
      checked: get-color-value('primary'),
      disabled: get-color-value('gray500'),
    ),
  ),
  dark: (
    default: get-color('light'),
    checked: get-color('primary'),
    disabled: get-color('secondary', 'white', 0.7),
    background: (
      default: get-color-value('light'),
      checked: get-color-value('primary'),
      disabled: get-color-value('secondary', 'white', 0.7),
    ),
  ),
);

.Checkbox {
  $checkbox-size: 18;
  $checkbox-width: $checkbox-size * 1px;
  $checkbox-height: $checkbox-size * 1px;
  $self: &;

  position: relative;
  display: flex;
  align-items: center;

  &--inline {
    display: inline-flex;
  }

  & + & {
    margin-top: 4px;
  }

  &--inline + &--inline {
    margin-top: 0;
  }

  input {
    display: none;
  }

  &-button {
    height: $checkbox-height;
    width: $checkbox-width;
    min-width: $checkbox-width;
    border-radius: 2px;
    position: relative;
    cursor: pointer;

    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      height: $checkbox-height;
      width: $checkbox-width;
      line-height: 1;
      font-size: 18px;

      @extend .Icon, .Icon--medium, .Icon-checkbox-unchecked:before;
    }
  }

  &-label {
    margin: 0 11px;
    cursor: pointer;
  }

  //
  // Effects
  //

  input:disabled ~ &-button,
  input:disabled ~ &-label {
    cursor: not-allowed;
  }

  //
  // Light theme colors
  //

  $theme-light-colors: map-get($checkbox-colors, light);
  $theme-light-background: map-get($theme-light-colors, background);

  &-label {
    color: map-get($theme-light-colors, default);
  }

  &-button:after {
    color: map-get($theme-light-background, default);

    @extend .Icon, .Icon--medium, .Icon-checkbox-unchecked:before;
  }

  input:indeterminate ~ &-button:after,
  &--indeterminate ~ &-button:after {
    color: map-get($theme-light-background, checked);

    @extend .Icon, .Icon--medium, .Icon-checkbox-indeterminate:before;
  }

  input:checked ~ &-button:after {
    color: map-get($theme-light-background, checked);

    @extend .Icon, .Icon--medium, .Icon-checkbox-checked:before;
  }

  input:disabled ~ &-label {
    color: map-get($theme-light-colors, disabled);
  }

  input:disabled ~ &-button:after {
    color: map-get($theme-light-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-unchecked:before;
  }

  input:checked:disabled ~ &-button:after {
    color: map-get($theme-light-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-checked:before;
  }

  input:disabled:indeterminate ~ &-button:after,
  &--indeterminate:disabled ~ &-button:after {
    color: map-get($theme-light-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-indeterminate:before;
  }

  //
  // Dark theme colors
  //

  $theme-dark-colors: map-get($checkbox-colors, dark);
  $theme-dark-background: map-get($theme-dark-colors, background);

  .Theme-dark & &-label {
    color: map-get($theme-dark-colors, default);
  }

  .Theme-dark & &-button:after {
    color: map-get($theme-dark-background, default);

    @extend .Icon, .Icon--medium, .Icon-checkbox-unchecked:before;
  }

  .Theme-dark & input:checked ~ &-button:after {
    color: map-get($theme-dark-background, checked);

    @extend .Icon, .Icon--medium, .Icon-checkbox-checked:before;
  }

  .Theme-dark & input:disabled ~ &-label {
    color: map-get($theme-dark-colors, disabled);
  }

  .Theme-dark & input:disabled ~ &-button:after {
    color: map-get($theme-dark-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-unchecked:before;
  }

  .Theme-dark & input:indeterminate ~ &-button:after,
  .Theme-dark & &--indeterminate ~ &-button:after {
    color: map-get($theme-dark-background, checked);

    @extend .Icon, .Icon--medium, .Icon-checkbox-indeterminate:before;
  }

  .Theme-dark & input:checked:disabled ~ &-button:after {
    color: map-get($theme-dark-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-checked:before;
  }

  .Theme-dark & input:disabled:indeterminate ~ &-button:after,
  .Theme-dark & &--indeterminate:disabled ~ &-button:after {
    color: map-get($theme-dark-background, disabled);

    @extend .Icon, .Icon--medium, .Icon-checkbox-indeterminate:before;
  }
}
