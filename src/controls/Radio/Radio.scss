/**
 * All colors
 */
$radio-colors: (
  light: (
    default: get-color('gray800'),
    checked: get-color('primary'),
    disabled: get-color('gray500'),
  ),
  dark: (
    default: get-color('light'),
    checked: get-color('primary'),
    disabled: get-color('secondary', 'white', 0.7),
  ),
);

.Radio {
  position: relative;
  display: flex;
  align-items: center;

  & + & {
    margin-top: 4px;
  }

  input {
    display: none;
  }

  &-button {
    height: 20px;
    width: 20px;
    min-width: 20px;
    background-color: transparent;
    border-radius: 50%;
    border-width: 2px;
    border-style: solid;
    position: relative;
    cursor: pointer;

    &:after {
      content: '';
      position: absolute;
      display: none;
      top: 3px;
      left: 3px;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background: currentColor;
    }
  }

  &-label {
    margin: 0 10px;
    cursor: pointer;
  }

  //
  // Effects
  //

  input:checked ~ &-button:after {
    display: block;
  }

  input:disabled ~ &-button,
  input:disabled ~ &-label {
    cursor: not-allowed;
  }

  //
  // Light theme colors
  //

  $theme-light-colors: map-get($radio-colors, light);

  &-button,
  &-label {
    color: map-get($theme-light-colors, default);
  }

  input:checked ~ &-button {
    color: map-get($theme-light-colors, checked);
  }

  input:disabled ~ &-button,
  input:disabled ~ &-label {
    color: map-get($theme-light-colors, disabled);
  }

  //
  // Dark theme colors
  //

  $theme-dark-colors: map-get($radio-colors, dark);

  .Theme-dark & &-button,
  .Theme-dark & &-label {
    color: map-get($theme-dark-colors, default);
  }

  .Theme-dark & input:checked ~ &-button {
    color: map-get($theme-dark-colors, checked);
  }

  .Theme-dark & input:disabled ~ &-button,
  .Theme-dark & input:disabled ~ &-label {
    color: map-get($theme-dark-colors, disabled);
  }
}
