.V2Grid {
  $self: &;

  display: flex;
  flex-wrap: wrap;
  margin-right: calc(-1 * #{$olt-v2-grid-gutter} / 2);
  margin-left: calc(-1 * #{$olt-v2-grid-gutter} / 2);
  margin-top: calc(-1 * #{$olt-v2-grid-gutter});

  &-item {
    position: relative;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    margin-top: $olt-v2-grid-gutter;
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
    padding-right: calc(#{$olt-v2-grid-gutter} / 2);
    padding-left: calc(#{$olt-v2-grid-gutter} / 2);
  }

  // Columns
  @each $breakpoint in map-keys(screen-get-v2()) {
    $infix: screen-infix-v2($breakpoint);

    @include screen-up-v2($breakpoint) {
      #{$self}-item--#{$infix}auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }

      @for $size from 1 through $olt-grid-columns {
        #{$self}-item--#{$infix}#{$size} {
          flex: 0 0 percentage($size / $olt-grid-columns);
          max-width: percentage($size / $olt-grid-columns);
        }
      }
    }
  }

  // Offsets
  @each $breakpoint in map-keys(screen-get-v2()) {
    $infix: screen-infix-v2($breakpoint);

    @include screen-up-v2($breakpoint) {
      @for $size from 1 through $olt-grid-columns {
        #{$self}-item--#{$infix}offset#{$size} {
          $num: $size / $olt-grid-columns;

          margin-left: if($num == 0, 0, percentage($num));
        }
      }
    }
  }
}
