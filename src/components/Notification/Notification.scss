$notification-padding-x: 16px;
$notification-spacing-y: 8px;
$notification-padding-y: 16px - $notification-spacing-y;
$notification-padding-x-mobile: 8px;
$notification-padding-y-mobile: 8px - $notification-spacing-y;

.Notifications {
  position: fixed;
  bottom: $notification-padding-y;
  right: $notification-padding-x;
  z-index: $olt-z-index-notification-close;

  @media (max-width: map-get($olt-v2-breakpoints, sm)) {
    bottom: $notification-padding-y-mobile;
    right: $notification-padding-x-mobile;
  }
}

.Notification {
  $notification-border-radius: 4px; // var-get('borderRadius');
  $notification-backdrop: rgba(255, 255, 255, 0.7);
  $notification-box-shadow: 0 2px 6px 0 rgba(13, 18, 44, 0.2);
  $notification-content-padding-x: var-get('spacing3');
  $notification-content-padding-y: var-get('spacing3');
  $notification-background: var-get('colorLight');
  $notification-width: 320px;
  $notification-close-size: 16px;
  $notification-close-margin-top: 6px;
  $notification-close-color: #666;
  $dialog-width: calc(#{$notification-width - $notification-padding-x} - #{$notification-content-padding-x} - #{$notification-close-size});
  $notification-transition-duration: 0.2s;
  $notification-header-padding: 12px;
  $notification-icon-size: 18px;
  $self: &;

  opacity: 0;
  width: 0;
  height: 0;
  overflow: auto;
  font-family: var-get('fontFamilyBase');
  background: $notification-background;
  border-radius: $notification-border-radius;
  padding-left: $notification-content-padding-x;
  padding-right: $notification-content-padding-x;
  z-index: $olt-z-index-notification;
  box-shadow: $notification-box-shadow;
  display: flex;
  flex-wrap: wrap;
  transition-property: opacity;
  transition-timing-function: ease-in;
  transition: 0.2s;

  &.is-open {
    opacity: 1;
    width: $notification-width;
    height: auto;
    transition: opacity $notification-transition-duration ease-in;
    margin-bottom: $notification-spacing-y;
    padding-top: $notification-content-padding-y;
    padding-bottom: $notification-content-padding-y;
  }

  &-dialog {
    width: $dialog-width;
  }

  &-header {
    padding: 0;
    width: 100%;
    vertical-align: middle;
    font-weight: bold;
    overflow: hidden;
    white-space: nowrap;
    padding-right: $notification-header-padding;

    &:before {
      @include icon-font-material;

      content: '';
      align-items: flex-start;
      font-size: $notification-icon-size;
      vertical-align: middle;
      padding-right: $notification-header-padding;
    }
  }

  &-content {
    margin: 0;
    padding: 0;
    padding-left: $notification-icon-size + $notification-header-padding;
    overflow: hidden;
  }

  &-close {
    @extend .Button;

    @extend .Button[data-icon];

    &:before {
      content: 'close';
    }

    color: $notification-close-color;
    background-color: $notification-background;
    height: $notification-close-size;
    width: $notification-close-size;
    min-width: $notification-close-size;
    margin-top: $notification-close-margin-top;
    border-color: $notification-background;
    z-index: $olt-z-index-notification-close;
  }

  &--error &-header:before,
  &--error &-header {
    content: 'error';
    color: var-get('colorError');
  }

  &--info &-header:before,
  &--info &-header {
    content: 'info';
    color: var-get('colorInfo');
  }

  &--warning &-header:before,
  &--warning &-header {
    content: 'error';
    color: var-get('colorWarning');
  }

  &--success &-header:before,
  &--success &-header {
    content: 'check_circle';
    color: var-get('colorSuccess');
  }

  @media (max-width: map-get($olt-v2-breakpoints, sm)) {
    &-content {
      display: none;
    }
  }
}
