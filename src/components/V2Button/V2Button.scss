$button-colors: (
  'focus': #46b4cd,
  'primary': (
    'default': (
      'light': (
        'bg': (
          'normal': #f60,
          'hover': #ff944d,
          'press': #cf5509,
          'focus': #f60,
          'progress': #f60,
          'disabled': #f5f6f8,
        ),
        'border': (),
        'font': (
          'normal': #fff,
        ),
      ),
      'dark': (
        'bg': (),
        'border': (),
        'font': (),
      ),
    ),
    'destructive': (
      'light': (
        'bg': (
          'normal': #fd5952,
          'hover': #fd8a85,
          'press': #cc4a49,
          'focus': #fd5952,
          'progress': #fd8a85,
        ),
        'font': (
          'normal': #fff,
        ),
      ),
      'dark': (),
    ),
    'confirmative': (
      'light': (
        'bg': (
          'normal': #02bf1b,
          'hover': #4dd25e,
          'press': #039b1e,
          'focus': #02bf1b,
          'progress': #4dd25e,
        ),
        'font': (
          'normal': #fff,
        ),
      ),
      'dark': (),
    ),
    'disabled': (
      'light': (
        'bg': (
          'normal': #f5f6f8,
        ),
        'font': (
          'normal': #a7a8aa,
        ),
      ),
      'dark': (
        'bg': (
          'normal': #343a40,
        ),
        'font': (
          'normal': #58585a,
        ),
      ),
    ),
  ),
  'secondary': (
    'default': (
      'light': (
        'bg': (
          'normal': #fff,
          'hover': #0d122c,
          'press': #3d4156,
          'focus': #fff,
          'progress': #0d122c,
        ),
        'border': (
          'normal': #0d122c,
        ),
        'font': (
          'normal': #0d122c,
          'hover': #fff,
          'press': #fff,
          'focus': #0d122c,
          'progress': #fff,
        ),
      ),
      'dark': (
        'bg': (
          'normal': #000,
          'hover': #fff,
          'press': #b7b8c0,
          'focus': #b7b8c0,
          'progress': #fff,
        ),
        'border': (
          'normal': #fff,
          'focus': #fff,
        ),
        'font': (
          'normal': #fff,
          'hover': #0d122c,
          'press': #0d122c,
          'focus': #fff,
          'progress': #0d122c,
        ),
      ),
    ),
    'confirmative': (
      'light': (
        'bg': (
          'normal': #fff,
          'hover': #02bf1b,
          'press': #049c1e,
          'focus': #fff,
          'progress': #02bf1b,
        ),
        'font': (
          'normal': #02bf1b,
          'hover': #fff,
          'press': #fff,
          'focus': #02bf1b,
          'progress': #fff,
        ),
        'border': (
          'normal': #02bf1b,
          'focus': #02bf1b,
        ),
      ),
      'dark': (
        'bg': (
          'normal': #000,
          'hover': #02bf1b,
          'press': #049c1e,
          'focus': #000,
          'progress': #02bf1b,
        ),
        'font': (
          'normal': #02bf1b,
          'hover': #fff,
          'press': #fff,
          'focus': #02bf1b,
          'progress': #fff,
        ),
        'border': (
          'normal': #02bf1b,
          'focus': #02bf1b,
        ),
      ),
    ),
    'destructive': (
      'light': (
        'bg': (
          'normal': #fff,
          'hover': #fd5952,
          'press': #cc4a49,
          'focus': #fff,
          'progress': #fd5952,
        ),
        'border': (
          'normal': #fd5952,
          'focus': #fd5952,
        ),
        'font': (
          'normal': #fd5952,
          'hover': #fff,
          'press': #fff,
        ),
      ),
      'dark': (
        'bg': (
          'normal': #000,
          'hover': #fd5952,
          'press': #cc4a49,
          'focus': #000,
          'progress': #fd5952,
        ),
        'border': (
          'normal': #fd5952,
          'focus': #fd5952,
        ),
        'font': (
          'normal': #fd5952,
          'hover': #fff,
          'press': #fff,
        ),
      ),
    ),
    'disabled': (
      'light': (
        'bg': (
          'normal': #fff,
        ),
        'border': (
          'normal': #d0d1d3,
        ),
        'font': (
          'normal': #d0d1d3,
        ),
      ),
      'dark': (
        'bg': (
          'normal': #000,
        ),
        'border': (
          'normal': #58585a,
        ),
        'font': (
          'normal': #58585a,
        ),
      ),
    ),
  ),
  'tertiary': (
    'action': (
      'light': (
        'bg': (
          'normal': transparent,
          'hover': #ffefe5,
          'press': #ffd1b2,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #f60,
        ),
      ),
      'dark': (
        'bg': (
          'normal': transparent,
          'hover': #4d1f00,
          'press': #803300,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #f60,
        ),
      ),
    ),
    'confirmative': (
      'light': (
        'bg': (
          'normal': transparent,
          'hover': #f6f7f9,
          'press': #ccf2d1,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #02bf1b,
        ),
      ),
      'dark': (
        'bg': (
          'normal': transparent,
          'hover': #2f2f30,
          'press': #013908,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #02bf1b,
        ),
      ),
    ),
    'destructive': (
      'light': (
        'bg': (
          'normal': transparent,
          'hover': #f6f7f9,
          'press': #ffdedc,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #fd5952,
        ),
      ),
      'dark': (
        'bg': (
          'normal': transparent,
          'hover': #2f2f30,
          'press': #4c1b19,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #fd5952,
        ),
      ),
    ),
    'default': (
      'light': (
        'bg': (
          'normal': transparent,
          'hover': #f6f7f9,
          'press': #e4e4e5,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #a7a8aa,
        ),
      ),
      'dark': (
        'bg': (
          'normal': transparent,
          'hover': #2f2f30,
          'press': #434344,
          'focus': transparent,
          'progress': transparent,
        ),
        'border': (
          'normal': transparent,
        ),
        'font': (
          'normal': #a7a8aa,
        ),
      ),
    ),
    'disabled': (
      'light': (
        'bg': (
          'normal': transparent,
        ),
        'font': (
          'normal': #e3e4e5,
        ),
      ),
      'dark': (
        'bg': (
          'normal': transparent,
        ),
        'font': (
          'normal': #58585a,
        ),
      ),
    ),
  ),
);
// $button-colors: ();

@function append-all($list, $append_list) {
  @if (length($append_list) == 0) {
    @return $list;
  }
  $first: nth($append_list, 1);
  $tail: remove-nth($append_list, 1);

  @return append-all(append($list, $first), $tail);
}

@function get-button-value($path, $colors: $button-colors) {
  @if not $colors {
    @return $colors;
  }

  @if length($path) == 0 {
    @return $colors;
  }

  $p: nth($path, 1);
  $tail: remove-nth($path, 1);
  $next: map-get($colors, $p);

  @return get-button-value($tail, $next);
}

@function get-bg-value($base, $state, $theme) {
  $first: get-button-value(append-all($base, $theme 'bg' $state));

  @if ($first) {
    @return $first;
  }
  $second: get-button-value(append-all($base, $theme 'bg' 'normal'));

  @return $second;
}

@function get-bg-light-value($base, $state) {
  @return get-bg-value($base, $state, 'light');
}

@function get-bg-dark-value($base, $state) {
  $first: get-bg-value($base, $state, 'dark');

  @if ($first) {
    @return $first;
  }

  @return get-bg-light-value($base, $state);
}

@function get-bg-by-theme($base, $state, $theme) {
  @if $theme == 'light' {
    @return get-bg-light-value($base, $state);
  }

  @return get-bg-dark-value($base, $state);
}

@function get-font-value($base, $state, $theme) {
  $first: get-button-value(append-all($base, $theme 'font' $state));

  @if ($first) {
    @return $first;
  }
  $second: get-button-value(append-all($base, $theme 'font' 'normal'));

  @return $second;
}

@function get-font-light-value($base, $state) {
  @return get-font-value($base, $state, 'light');
}

@function get-font-dark-value($base, $state) {
  $first: get-font-value($base, $state, 'dark');

  @if ($first) {
    @return $first;
  }

  @return get-font-light-value($base, $state);
}

@function get-font-by-theme($base, $state, $theme) {
  @if $theme == 'light' {
    @return get-font-light-value($base, $state);
  }

  @return get-font-dark-value($base, $state);
}

@function get-border-value($base, $state, $theme) {
  $first: get-button-value(append-all($base, $theme 'border' $state));

  @if ($first) {
    @return $first;
  }
  $first: get-button-value(append-all($base, $theme 'bg' $state));

  @if ($first) {
    @return $first;
  }
  $first: get-button-value(append-all($base, $theme 'bg' 'normal'));

  @return $first;
}

@function get-border-light-value($base, $state) {
  @return get-border-value($base, $state, 'light');
}

@function get-border-dark-value($base, $state) {
  $first: get-border-value($base, $state, 'dark');

  @if ($first) {
    @return $first;
  }

  @return get-border-value($base, $state, 'light');
}

@function get-border-by-theme($base, $state, $theme) {
  @if $theme == 'light' {
    @return get-border-light-value($base, $state);
  }

  @return get-border-dark-value($base, $state);
}

@function toNotSelector($modifiers, $self) {
  $res: '';

  @each $m in $modifiers {
    $res: '#{$res}:not(#{$self}--#{$m})';
  }

  @return $res;
}

@mixin setButtonStateDefaults($self, $emphasis, $theme, $type, $state) {
  $borderColor: get-border-by-theme($emphasis $type, $state, $theme);

  @if ($theme == 'dark') {
    box-shadow: 0 0 0.5px 0 $borderColor, 0 0 0.5px $borderColor;
  }

  background: get-bg-by-theme($emphasis $type, $state, $theme);
  border-color: $borderColor;
  color: get-font-by-theme($emphasis $type, $state, $theme);
}

@mixin button-type($self, $emphasis, $theme, $type) {
  &:not(:disabled) {
    @include setButtonStateDefaults($self, $emphasis, $theme, $type, 'normal');

    // TODO discuss with team-ui if we want to have the blue outlines for the
    // focus state.

    /*
    &:focus {
      &:after {
        content: '';
        position: absolute;
        width: calc(100% + 8px);
        height: calc(100% + 8px);
        border-radius: $olt-button-border-radius;
        border-style: solid;
        border-color: map-get($button-colors, 'focus');
        border-width: 2px;
      }
    }
    */

    &:hover {
      @include setButtonStateDefaults($self, $emphasis, $theme, $type, 'hover');
    }

    &:active {
      @include setButtonStateDefaults($self, $emphasis, $theme, $type, 'press');
    }
  }
}

@mixin button-theme($self, $emphasis, $theme) {
  &:disabled {
    user-select: none;
    cursor: default;
    background: get-bg-by-theme($emphasis 'disabled', 'normal', $theme);
    border-color: get-border-by-theme($emphasis 'disabled', 'normal', $theme);
    color: get-font-by-theme($emphasis 'disabled', 'normal', $theme);
  }
  $types-base: ('default' 'destructive' 'confirmative');
  $types: if(
    $emphasis == 'tertiary',
    append($types-base, 'action'),
    $types-base
  );

  &#{toNotSelector($types, $self)} {
    @include button-type($self, $emphasis, $theme, 'default');
  }

  @each $type in $types {
    &#{$self}--#{$type} {
      @include button-type($self, $emphasis, $theme, $type);
    }
  }
}

@mixin button-emphasis($self, $emphasis) {
  $themes: ('light', 'dark');

  // set default if no other style is set
  &#{toNotSelector($themes, $self)} {
    @include button-theme($self, $emphasis, 'light');
  }

  @each $theme in ('light' 'dark') {
    &#{$self}--#{$theme} {
      @include button-theme($self, $emphasis, $theme);
    }
  }
}

.V2Button {
  $button-padding-x: 1rem;
  $button-padding-y: 0;
  $button-border-color: var-get('borderColor');
  $button-background: var-get('borderColor');
  $button-border-width: 1px; // var-get('borderWidth');
  $button-color: var-get('colorDark');
  $button-pending-opacity: 0.4;
  $button-font-size: 14px;
  $button-line-height: 18px;
  $button-pending-dark: rgba(
    #000,
    $button-pending-opacity
  ); // TODO: Hardcode button-pending-color for the sake of css variables
  $button-pending-light: rgba(
    #fff,
    $button-pending-opacity
  ); // TODO: Hardcode button-pending-color for the sake of css variables
  $self: &;

  position: relative;
  // background-color: $button-background;
  background: none;
  min-height: 36px;
  border-style: solid;
  vertical-align: middle;
  line-height: $button-line-height;
  // border-color: $button-border-color;
  border-width: $button-border-width;
  border-radius: $olt-button-border-radius;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  text-decoration: none;
  font-size: $button-font-size;
  cursor: pointer;
  transition: all 300ms;
  // min-width: 120px;
  -webkit-appearance: none;
  color: $button-color;
  padding: $button-padding-y $button-padding-x;

  // reset focus state
  &.is-active,
  &:focus {
    outline-width: 0;
    // safari fix, without setting this from auto to solid a blue outline is shown
    // even if outline-width is set to 0
    outline-style: solid;
  }

  $emphases: ('primary' 'secondary' 'tertiary');
  // set default if no other emphasis is set
  &#{toNotSelector($emphases, $self)} {
    @include button-emphasis($self, 'primary');
  }

  @each $emphasis in $emphases {
    &#{$self}--#{$emphasis} {
      @include button-emphasis($self, $emphasis);
    }
  }

  &[data-icon-left],
  &[data-icon-right] {
    &:before {
      @include icon-font-material;

      font-size: 120%;
    }
  }

  &[data-icon-left]:before {
    content: attr(data-icon-left);
  }

  &[data-icon-right] {
    flex-direction: row-reverse;

    &:before {
      content: attr(data-icon-right);
    }
  }
}
