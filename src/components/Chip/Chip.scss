@import '../../core/functions/color';

/**
 * Generates a background with a clipped circle on the top right position that
 * will match the bubble's circle size
 */
@function chip-bubble-background($color) {
  @return radial-gradient(
    circle at top right,
    transparent,
    transparent 10.5px,
    $color 11.5px,
    $color
  );
}

/**
 * All colors of the chip
 */
$chip-colors: (
  default: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: get-color('dark'),
    ),
    color: (
      normal: get-color('dark'),
      disabled: get-color('gray500'),
    ),
    background: (
      normal: get-color('gray200'),
      hover: get-color('gray200', 'white', 0.5),
      press: get-color('gray200', 'black', 0.8),
      focus: get-color('gray200', 'white', 0.5),
      disabled: get-color('gray100'),
    ),
  ),
  dark: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: #d0d1d3,
    ),
    color: (
      normal: get-color('light'),
      disabled: get-color('gray500'),
    ),
    background: (
      normal: get-color('dark'),
      hover: get-color('dark', 'white', 0.6),
      press: get-color('dark', 'white', 0.2),
      focus: get-color('dark', 'white', 0.6),
      disabled: get-color('gray100'),
    ),
  ),
  light: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: #495057,
    ),
    color: (
      normal: get-color('dark'),
      disabled: get-color('gray600'),
    ),
    background: (
      normal: get-color('light'),
      hover: get-color('light', 'black', 0.7),
      press: get-color('light', 'black', 0.4),
      focus: get-color('light', 'black', 0.7),
      disabled: get-color('gray500'),
    ),
  ),
  primary: (
    selectable: true,
    disableable: true,
    alias: 'active',
    bubble-color: (
      normal: get-color('primary'),
    ),
    color: (
      normal: get-color('primary'),
      disabled: get-color('gray500'),
    ),
    background: (
      normal: get-color('primary', 'white', 0.2),
      hover: get-color('primary', 'white', 0.4),
      press: get-color('primary', 'white', 0.6),
      focus: get-color('primary', 'white', 0.4),
      disabled: get-color('gray100'),
    ),
  ),
  error: (
    bubble-color: (
      normal: get-color('error'),
    ),
    color: (
      normal: get-color('error'),
    ),
    background: (
      normal: get-color('error', 'white', 0.2),
    ),
  ),
  success: (
    bubble-color: (
      normal: get-color('success'),
    ),
    color: (
      normal: get-color('success'),
    ),
    background: (
      normal: get-color('success', 'white', 0.15),
    ),
  ),
  info: (
    bubble-color: (
      normal: get-color('info'),
    ),
    color: (
      normal: get-color('info'),
    ),
    background: (
      normal: get-color('info', 'white', 0.2),
    ),
  ),
);

.Chip {
  $self: &;

  @extend .u-support;

  border: none;
  display: inline-flex;
  white-space: nowrap;
  vertical-align: middle;
  border-radius: 12.5px;
  background-size: cover;
  padding: 5px 12px 6px 12px;
  position: relative;


  //
  // Selectable
  //

  &--selectable {
    cursor: pointer;
  }

  //
  // Left & Right decorations
  //

  &:before,
  &:after {
    font-size: 10px;
    padding: 2px 0 2px 0;
  }

  &-icon-left {
    padding-left: 10px;

    &:before {
      @extend .Icon;

      @extend .Icon--small;

      margin-right: 3px;
    }
  }

  &-icon-right {
    padding-right: 22px;

    &:before {
      @extend .Icon;

      @extend .Icon--small;

      position: absolute;
      right: 9px;
    }
  }

  //
  // Bubble
  //

  &--withBubble {
    padding-right: 13px;
    margin-right: 8px;
  }

  &-bubble {
    position: absolute;
    top: -8px;
    right: -8px;
    font-weight: 700;
    font-size: 8px;
    letter-spacing: 0;
    line-height: 16px;
    border-radius: 100%;
    text-align: center;
    width: 17px;
    height: 17px;
    padding-top: 1px;

    &-icon {
      &:before {
        @extend .Icon;

        display: inline-flex;
        vertical-align: middle;
        font-size: 10px;
        font-weight: 900;
      }
    }
  }

  //
  // Colors
  //

  @mixin chip-colors($color-map, $selector) {
    $color: map-get($color-map, 'color');
    $background: map-get($color-map, 'background');
    $bubble-color: map-get($color-map, 'bubble-color');
    $selectable: map-get($color-map, 'selectable');
    $disableable: map-get($color-map, 'disableable');

    color: map-get($color, 'normal');
    background: map-get($background, 'normal');

    @if $selector == '' {
      &-bubble {
        background: map-get($background, 'normal');
        color: map-get($bubble-color, 'normal');
      }
    } @else {
      & #{$selector}-bubble {
        background: map-get($background, 'normal');
        color: map-get($bubble-color, 'normal');
      }
    }

    @at-root {
      &#{$selector}--withBubble {
        background: chip-bubble-background(map-get($background, 'normal'));
      }

      @if $selectable == true {
        &#{$selector}--selectable {
          &:hover {
            background: map-get($background, 'hover');
          }

          &:active {
            background: map-get($background, 'press');
          }

          &:focus {
            background: map-get($background, 'focus');
          }
        }

        &#{$selector}--selectable#{$self}--withBubble {
          &:hover {
            background: chip-bubble-background(map-get($background, 'hover'));

            #{$self}-bubble {
              background: map-get($background, 'hover');
            }
          }

          &:active {
            background: chip-bubble-background(map-get($background, 'press'));

            #{$self}-bubble {
              background: map-get($background, 'press');
            }
          }

          &:focus {
            background: chip-bubble-background(map-get($background, 'focus'));

            #{$self}-bubble {
              background: map-get($background, 'focus');
            }
          }
        }
      }

      @if $disableable == true {
        &.is-disabled {
          background: map-get($background, 'disabled');
          color: map-get($color, 'disabled');
        }

        &.is-disabled#{$self}--withBubble {
          background: chip-bubble-background(map-get($background, 'disabled'));
        }

        &.is-disabled #{$self}-bubble {
          background: map-get($background, 'disabled');
          color: map-get($color, 'disabled');
        }
      }
    }
  }

  @each $label, $map in $chip-colors {
    @if $label == 'default' {
      @include chip-colors($map, '');
    } @else {
      @at-root {
        &--#{$label} {
          @include chip-colors($map, $self);
        }

        @if map-has_key($map, 'alias') {
          $alias: map-get($map, 'alias');

          &--#{$alias} {
            @include chip-colors($map, $self);
          }
        }
      }
    }
  }

  //
  // Special bubble colors
  //

  &-bubble,
  &--selectable#{$self}--withBubble:hover #{$self}-bubble,
  &--selectable#{$self}--withBubble:active #{$self}-bubble,
  &--selectable#{$self}--withBubble:focus #{$self}-bubble,
  &.is-disabled#{$self}--withBubble #{$self}-bubble {
    &--success,
    &--info,
    &--error,
    &--warning {
      color: get-color('light');
    }

    &--success {
      background-color: get-color('success');
    }

    &--info {
      background-color: get-color('info');
    }

    &--error {
      background-color: get-color('error');
    }

    &--warning {
      background-color: get-color('warning');
    }
  }
}
