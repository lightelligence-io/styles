/**
 * Generates a background with a clipped circle on the top right position that
 * will match the bubble's circle size
 */
@function chip-bubble-background($color) {
  @return radial-gradient(
    circle at top right,
    transparent,
    transparent 10.5px,
    $color 11.5px,
    $color
  );
}

/**
 * All contextual colors of the chip
 */
$chip-colors: (
  default: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: $olt-v2-darkColor,
    ),
    color: (
      normal: $olt-v2-darkColor,
      disabled: $olt-v2-gray500Color,
    ),
    background: (
      normal: $olt-v2-gray200Color,
      hover: $olt-v2-gray200Color-50,
      press: $olt-v2-gray200Color--80,
      focus: $olt-v2-gray200Color-50,
      disabled: $olt-v2-gray100Color
    ),
  ),
  dark: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: $olt-v2-lightColor,
    ),
    color: (
      normal: $olt-v2-lightColor,
      disabled: $olt-v2-gray500Color,
    ),
    background: (
      normal: $olt-v2-darkColor,
      hover: $olt-v2-darkColor-60,
      press: $olt-v2-darkColor-20,
      focus: $olt-v2-darkColor-60,
      disabled: $olt-v2-gray100Color
    ),
  ),
  light: (
    selectable: true,
    disableable: true,
    bubble-color: (
      normal: #495057,
    ),
    color: (
      normal: $olt-v2-darkColor,
      disabled: var-get('gray600'),
    ),
    background: (
      normal: $olt-v2-lightColor,
      hover: $olt-v2-lightColor--70,
      press: $olt-v2-lightColor--40,
      focus: $olt-v2-lightColor--70,
      disabled: $olt-v2-gray500Color
    ),
  ),
  primary: (
    selectable: true,
    disableable: true,
    alias: 'active',
    bubble-color: (
      normal: var(--olt-v2-primaryColor),
    ),
    color: (
      normal: var(--olt-v2-primaryColor),
      disabled: $olt-v2-gray500Color,
    ),
    background: (
      normal: var(--olt-v2-primaryColor-20),
      hover: var(--olt-v2-primaryColor-40),
      press: var(--olt-v2-primaryColor-60),
      focus: var(--olt-v2-primaryColor-40),
      disabled: $olt-v2-gray100Color
    ),
  ),
  error: (
    bubble-color: (
      normal: $olt-v2-errorColor,
    ),
    color: (
      normal: $olt-v2-errorColor,
    ),
    background: (
      normal: $olt-v2-errorColor-20,
    ),
  ),
  success: (
    bubble-color: (
      normal: $olt-v2-successColor,
    ),
    color: (
      normal: $olt-v2-successColor,
    ),
    background: (
      normal: $olt-v2-successColor-15,
    ),
  ),
  info: (
    bubble-color: (
      normal: $olt-v2-infoColor,
    ),
    color: (
      normal: $olt-v2-infoColor,
    ),
    background: (
      normal: $olt-v2-infoColor-20,
    ),
  ),
);

.Chip {
  $self: &;

  border: none;
  display: inline-flex;
  white-space: nowrap;
  vertical-align: middle;
  font-family: var-get('fontFamilyBase');
  font-size: 12px;
  letter-spacing: 0;
  line-height: 18px;
  border-radius: 12.5px;
  background-size: cover;
  padding: 3px 12px 4px 12px;
  position: relative;

  //
  // Selectable
  //

  &--selectable {
    cursor: pointer;
  }

  //
  // Left & Right decorations
  //

  &:before,
  &:after {
    display: inline-flex;
    vertical-align: middle;
    line-height: 18px;
  }

  &-icon-left {
    padding-left: 8px;

    &:before {
      @extend .Icon;

      margin-right: 2px;
    }
  }

  &-icon-right {
    padding-right: 24px;

    &:before {
      @extend .Icon;

      position: absolute;
      right: 8px;
    }
  }

  //
  // Bubble
  //

  &--withBubble {
    padding-right: 13px;
    margin-right: 8px;
  }

  &-bubble {
    position: absolute;
    top: -8px;
    right: -8px;
    font-weight: var-get('fontWeightBold');
    font-size: 8px;
    letter-spacing: 0;
    line-height: 16px;
    border-radius: 100%;
    text-align: center;
    width: 17px;
    height: 17px;

    &-icon {
      &:before {
        @extend .Icon;

        display: inline-flex;
        vertical-align: middle;
        font-size: 11px;
        font-weight: 900;
      }
    }
  }

  //
  // Colors
  //

  @mixin chip-colors($color-map, $selector) {
    $color: map-get($color-map, 'color');
    $background: map-get($color-map, 'background');
    $bubble-color: map-get($color-map, 'bubble-color');
    $selectable: map-get($color-map, 'selectable');
    $disableable: map-get($color-map, 'disableable');

    color: map-get($color, 'normal');
    background: map-get($background, 'normal');

    @if $selector == '' {
      &-bubble {
        background: map-get($background, 'normal');
        color: map-get($bubble-color, 'normal');
      }
    } @else {
      & #{$selector}-bubble {
        background: map-get($background, 'normal');
        color: map-get($bubble-color, 'normal');
      }
    }

    @at-root {
      &#{$selector}--withBubble {
        background: chip-bubble-background(map-get($background, 'normal'));
      }

      @if $selectable == true {
        &#{$selector}--selectable {
          &:hover {
            background: map-get($background, 'hover');
          }

          &:active {
            background: map-get($background, 'press');
          }

          &:focus {
            background: map-get($background, 'focus');
          }
        }

        &#{$selector}--selectable#{$self}--withBubble {
          &:hover {
            background: chip-bubble-background(map-get($background, 'hover'));

            #{$self}-bubble {
              background: map-get($background, 'hover');
            }
          }

          &:active {
            background: chip-bubble-background(map-get($background, 'press'));

            #{$self}-bubble {
              background: map-get($background, 'press');
            }
          }

          &:focus {
            background: chip-bubble-background(map-get($background, 'focus'));

            #{$self}-bubble {
              background: map-get($background, 'focus');
            }
          }
        }
      }

      @if $disableable == true {
        &.is-disabled {
          background: map-get($background, 'disabled');
          color: map-get($color, 'disabled');
        }

        &.is-disabled#{$self}--withBubble {
          background: chip-bubble-background(map-get($background, 'disabled'));
        }

        &.is-disabled #{$self}-bubble {
          background: map-get($background, 'disabled');
          color: map-get($color, 'disabled');
        }
      }
    }
  }

  @each $label, $map in $chip-colors {
    @if $label == 'default' {
      @include chip-colors($map, '');
    } @else {
      @at-root {
        &--#{$label} {
          @include chip-colors($map, $self);
        }

        @if map-has_key($map, 'alias') {
          $alias: map-get($map, 'alias');

          &--#{$alias} {
            @include chip-colors($map, $self);
          }
        }
      }
    }
  }

  //
  // Special bubble colors
  //

  &-bubble,
  &--selectable#{$self}--withBubble:hover #{$self}-bubble,
  &--selectable#{$self}--withBubble:active #{$self}-bubble,
  &--selectable#{$self}--withBubble:focus #{$self}-bubble,
  &.is-disabled#{$self}--withBubble #{$self}-bubble {
    &--success,
    &--info,
    &--error,
    &--warning {
      color: var-get('colorLight');
    }

    &--success {
      background-color: var-get('colorSuccess');
    }

    &--info {
      background-color: #46b4cd;
    }

    &--error {
      background-color: var-get('colorError');
    }

    &--warning {
      background-color: #ffc94d;
    }
  }
}
